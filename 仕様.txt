目的はいまのところ

アイテムXを得る
Xを倒す
Xの目的を叶える

の3通り

Xの目的を叶える、の場合
Xの目的が何だと思っているのか、というのが問題になる。それをデータ的にどう管理するのが良いか

アイテムXを得る、だと、Xを得るために何をすればいいのか、というのが問題になる

なんらかのキャラの秘密や場所の秘密を明らかにし、何をすればいいのか、というのが更新される。

アイテムX自体にトポロジーが設定されていて、それがrevealedになる、というのが基本形だろう
revealedになっているかどうかのフラグはキャラごとにある
これをどのようなデータ形式で持つか。

Docchi的に自然なのは、全イベントテーブルというのがズラっと並んでおり、キャラごとにイベントのIDだけもっているMListを用意して、
revealedになるたびにそのIDを持ったオブジェクトを加えていく、というものだ。

トポロジーに関しても、Aがrevealedになる(or activatedになる)場合、flagはXに変わる、というものになるだろう

Aがrevealedされた場合、ルートXを進めていった先にあるものが実はXではないことに気づく、という展開になってくる。
情報格差が生じる。

Aにたどり着くために、バトルをする、情報戦を行う、場所に行って特定の行動をする、といった行動をとっていく
キャラによっては情報戦では情報が得られず、特定の条件を満たすことが必要な場合も出てくる

ああ難しい

だから結局、それぞれのまとまりごとに、書いてから Docchi Src に変換することになると思う
変換機能をDocchi側に用意するかは謎

で、イベントAを含むイベント集を逆引きで見れるツールも開発すると思う
なんかすげえ大変じゃねえか

まあシノビガミ的なシステムをシミュレートするのが大変なのは最初からわかってはいたけれども・・・

difficulty fake_difficulty
pcのpowerがdifficultyを上回る場合、イベントが起動できる
fake_difficultyはUI上で表示される見せかけのdifficultyだが、AIもこの数値を見て実行するかを判断する
万策尽きた場合 fakeであることに賭けてAIも実行を始める

weak 特定のイベントを所有しているとdifficultyが下がる
weak_pc 特定のPCと同時にイベントに取り組むとdifficultyが下がる

weak_info 特定のイベントを所有している場合、weakの情報がUI上で見える
light_weak どのイベントを所有すれば、弱点の情報が得られるかわかるもの
dark_weak weakの存在はわかるが、どのイベントを所有すれば弱点の情報が得られるかわからないもの
completely_dark_weak weakの存在もUI上わからないもの

objective pcの目的。目的ごとに設定された功績点を求めて戦う。
dark, completely_dark, light objective。weakと同じように、イベントを実行することで明らかになる目的がある。
目的達成のためにAIも動くが、hidden objective を自ら明らかにしようとはしないし、
誰かのobjectiveを変更することも（それがAIのobjectiveでない限り)しない

own イベントの所有権。
-all クリアした瞬間全員が所有する
-unlimited クリアしたものは誰でも所有することが出来る
-one 最初にクリアしたものが所有権を持つ

Visibility
transparentであれば、情報が見える。実行することが出来る。
lightであれば、基本的な情報は見える。どのイベントをクリアすればtransparentになるか見える。AIはこれを探索できる。
darkであれば、ヒントが見える。UI上はどのイベントをクリアすれば実行可能になるかわからないが、AIはこれを探索ルートに入れられる
completely darkであれば、何もわからない。AIも探索ルートに入れられない。

knownとは 知っているイベントは実行しようとすることが出来る
特定のイベントを所有することで次のイベントがknownになる

peek キャラAからあるイベントの情報を得ることが出来る
Aが真のdifficultyを知っていればdifficultyが、weak情報を知っていればweak情報が、
クリア後のイベントを知っていればその先までknownになる(?) これはsuper_peekとでもするべきか？

give あるイベントを渡す one でも unlimited でも渡すことが出来る
イベントを渡すことで新たな目的を知ることも出来る

usurp これがある場合、イベントの実行時にown=oneのイベントの所有権を簒奪することが出来る。
誰かに所有されていないと実行できない。
所有者のpowerがdifficultyに関係する？

share これがある場合、イベントの実行時にown=unlimitedのイベントの所有権をコピーする事ができる。

chain イベントを実行すると、そこからchainするイベントは、行動回数消費無しで自動的に実行される
実行しないことは出来ない
２つのルートで得られる単一のイベントや、or条件が記述できる
chainがある場合 known は設定できない(?)

free 行動回数消費無しで実行可能なイベント。実行しないことも出来る。

deactivate あるイベントを所有させると、そのイベントの所有の事実が消える

repeatableイベント 根本的に間違いでありそうな機能。たとえばこれで強さ+1などしてしまったら、AIはひたすら強さを上げてしまうのでは？
いらないかもなあ

キャラ固有イベント
キャラが初期状態で持っているイベント。誰にも渡せない。
Copyableイベント
キャラが初期状態で持っているイベントから派生するイベントで、そのキャラの協力がないとknownにならず所有できない。
キャラの協力者であることを示すイベント。

