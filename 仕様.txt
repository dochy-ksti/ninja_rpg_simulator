目的はいまのところ

アイテムXを得る
Xを倒す
Xの目的を叶える

の3通り

Xの目的を叶える、の場合
Xの目的が何だと思っているのか、というのが問題になる。それをデータ的にどう管理するのが良いか

アイテムXを得る、だと、Xを得るために何をすればいいのか、というのが問題になる

それぞれのまとまりごとに、書いてから Docchi Src に変換することになると思う
変換機能をDocchi側に用意するかは謎

difficulty fake_difficulty
pcのpowerがdifficultyを上回る場合、イベントが起動できる
fake_difficultyはUI上で表示される見せかけのdifficultyだが、AIもこの数値を見て実行するかを判断する
万策尽きた場合 fakeであることに賭けてAIも実行を始める

fake_difficulaty :
    [10, //value
    "event_name"], //fakeが解除されるイベント

fake_difficulaty : [
    [10, "event_name"],
    [20, "ev_name2"],
    [["info"], //challenge_typeというのがあり、参照する能力値が変わる
    40,"ev_name3"],
    ["any_string",//Stringを入れることで、difficultyに任意文字列を設定する
    "ev_name"]]

上から優先的にfakeが表示される。全部解除されたら真のdifficultyが表示される
（多重フェイクなんかやる必要あるんかいな・・・？）

weak 特定のイベントを所有しているとdifficultyが下がる

weak_info 特定のイベントを所有している場合、weakの情報がUI上で見える
light_weak どのイベントを所有すれば、弱点の情報が得られるかわかるもの
dark_weak weakの存在はわかるが、どのイベントを所有すれば弱点の情報が得られるかわからないもの
completely_dark_weak weakの存在もUI上わからないもの
weak:[
    [10,"ev_id"],
    [10, "ev_id",
    [["fake_num","fake_id"], //fake_difficultyのように、
    ["fake_num2", "fake_id2"],//無数のfake情報を設定できる。そんなに設定する意味ある？
    ["fake_num3", ["fake_id3"]], //[]で囲われた部分は見えなくすることが可能
    [[], ["fake_id3"]] //両方消すとなにもないように見える
    //fake_fake つまり fake_idを実行してもfakeが消えない、というweakは必要だろうか
    //わかりにくすぎはしないか？　どう記述すればいいかもよくわからん

objective pcの目的。目的ごとに設定された功績点を求めて戦う。
weakと同じように、イベントを所有することで発生する目的がある。
目的達成のためにAIも動くが、hidden objective を自ら明らかにしようとはしないし、
誰かのobjectiveを変更することも（それがAIのobjectiveでない限り)しない

own イベントの所有権。
-all クリアした瞬間全員が所有する
-unlimited クリアしたものは誰でも所有することが出来る
-one 最初にクリアしたものが所有権を持つ


visibility:[
    ["black", "ev_name"],
    ["dark","ev_name"],
    ["black", "ev_name"]]
blackの場合、AIも存在を認識できない
darkの場合、UI上で表示されない
全部クリアすると見えるようになる

from : "hoge" hogeイベント所有時に実行可能に

fake_from:[
    ["hoge", "ev_name"],
    ["hoge2", "ev_name"]]

いつもの感じ

from : [],

fromが空リストの場合、最初から実行可能であることを意味する

chain:"hoge",
chain:["hoge","or_hoge2"],
chain_and:["hoge","and_hoge2"],
chain_and:[
    ["hoge","and_hoge"], //or
    ["hoge2","and_hoge2"]]

イベントからchainするイベントは、行動回数消費無しで自動的に実行される
実行しないことは出来ない
２つのルートで得られる単一のイベントや、or/and条件が記述できる
fromやなんかにchainイベントを入れた場合、chainイベントのand/or元がUI上に表示される

peek キャラAからあるイベントの情報を得ることが出来る
Aが真のdifficultyを知っていればdifficultyが、weak情報を知っていればweak情報が、
クリア後のイベントを知っていればその先までknownになる(?) これはsuper_peekとでもするべきか？

give あるイベントを渡す one でも unlimited でも渡すことが出来る
イベントを渡すことで新たな目的を知ることも出来る

usurp これがある場合、イベントの実行時にown=oneのイベントの所有権を簒奪することが出来る。
誰かに所有されていないと実行できない。
所有者のpowerがdifficultyに関係する？

share これがある場合、イベントの実行時にown=unlimitedのイベントの所有権をコピーする事ができる。

free 行動回数消費無しで実行可能なイベント。実行しないことも出来る。

deactivate あるイベントを所有させると、そのイベントの所有の事実が消える

repeatableイベント 根本的に間違いでありそうな機能。たとえばこれで強さ+1などしてしまったら、AIはひたすら強さを上げてしまうのでは？
いらないかもなあ

name fake_name。

キャラ固有イベント
キャラが初期状態で持っているイベント。誰にも渡せない。
Copyableイベント
キャラが初期状態で持っているイベントから派生するイベントで、そのキャラの協力がないとknownにならず所有できない。
キャラの協力者であることを示すイベント。

